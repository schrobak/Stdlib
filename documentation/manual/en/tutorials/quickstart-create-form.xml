<?xml version="1.0" encoding="utf-8"?>
<!-- Converted by db4-upgrade version 1.0 -->

<section xmlns="http://docbook.org/ns/docbook" version="5.0" xml:id="learning.quickstart.create-form"><info><title>Create A Form</title></info>
    

    <para>
        For our guestbook to be useful, we need a form for submitting new entries.
    </para>

    <para>
        Our first order of business is to create the actual form class. To create the empty form
        class, execute:
    </para>

    <programlisting language="shell">
% zf create form Guestbook
Creating a form at application/forms/Guestbook.php
Updating project profile '.zfproject.xml'
</programlisting>

    <para>
        This will create the directory <filename>application/forms/</filename> with the classfile
        <filename>Guestbook.php</filename>. Open that file and update it so it reads as follows:
    </para>

    <programlisting language="php">
// application/forms/Guestbook.php

class Application_Form_Guestbook extends Zend_Form
{
    public function init()
    {
        // Set the method for the display form to POST
        $this-&gt;setMethod('post');

        // Add an email element
        $this-&gt;addElement('text', 'email', array(
            'label'      =&gt; 'Your email address:',
            'required'   =&gt; true,
            'filters'    =&gt; array('StringTrim'),
            'validators' =&gt; array(
                'EmailAddress',
            )
        ));

        // Add the comment element
        $this-&gt;addElement('textarea', 'comment', array(
            'label'      =&gt; 'Please Comment:',
            'required'   =&gt; true,
            'validators' =&gt; array(
                array('validator' =&gt; 'StringLength', 'options' =&gt; array(0, 20))
                )
        ));

        // Add a captcha
        $this-&gt;addElement('captcha', 'captcha', array(
            'label'      =&gt; 'Please enter the 5 letters displayed below:',
            'required'   =&gt; true,
            'captcha'    =&gt; array(
                'captcha' =&gt; 'Figlet',
                'wordLen' =&gt; 5,
                'timeout' =&gt; 300
            )
        ));

        // Add the submit button
        $this-&gt;addElement('submit', 'submit', array(
            'ignore'   =&gt; true,
            'label'    =&gt; 'Sign Guestbook',
        ));

        // And finally add some CSRF protection
        $this-&gt;addElement('hash', 'csrf', array(
            'ignore' =&gt; true,
        ));
    }
}
</programlisting>

    <para>
        The above form defines five elements: an email address field, a comment field, a
        <acronym>CAPTCHA</acronym> for preventing spam submissions, a submit button, and a
        <acronym>CSRF</acronym> protection token.
    </para>

    <para>
        Next, we will add a <methodname>signAction()</methodname> to our
        <classname>GuestbookController</classname> which will process the form upon submission. To
        create the action and related view script, execute the following:
    </para>

    <programlisting language="shell">
% zf create action sign Guestbook
Creating an action named sign inside controller
    at application/controllers/GuestbookController.php
Updating project profile '.zfproject.xml'
Creating a view script for the sign action method
    at application/views/scripts/guestbook/sign.phtml
Updating project profile '.zfproject.xml'
</programlisting>

    <para>
        As you can see from the output, this will create a <methodname>signAction()</methodname>
        method in our controller, as well as the appropriate view script.
    </para>

    <para>
        Let's add some logic into our guestbook controller's sign action. We need to first check if
        we're getting a <acronym>POST</acronym> or a <acronym>GET</acronym> request; in the latter
        case, we'll simply display the form. However, if we get a <acronym>POST</acronym> request,
        we'll want to validate the posted data against our form, and, if valid, create a new entry
        and save it. The logic might look like this:
    </para>

    <programlisting language="php">
// application/controllers/GuestbookController.php

class GuestbookController extends Zend_Controller_Action
{
    // snipping indexAction()...

    public function signAction()
    {
        $request = $this-&gt;getRequest();
        $form    = new Application_Form_Guestbook();

        if ($this-&gt;getRequest()-&gt;isPost()) {
            if ($form-&gt;isValid($request-&gt;getPost())) {
                $comment = new Application_Model_Guestbook($form-&gt;getValues());
                $mapper  = new Application_Model_GuestbookMapper();
                $mapper-&gt;save($comment);
                return $this-&gt;_helper-&gt;redirector('index');
            }
        }

        $this-&gt;view-&gt;form = $form;
    }
}
</programlisting>

    <para>
        Of course, we also need to edit the view script; edit
        <filename>application/views/scripts/guestbook/sign.phtml</filename> to read:
    </para>

    <programlisting language="php">
&lt;!-- application/views/scripts/guestbook/sign.phtml --&gt;

Please use the form below to sign our guestbook!

&lt;?php
$this-&gt;form-&gt;setAction($this-&gt;url());
echo $this-&gt;form;
</programlisting>

    <note><info><title>Better Looking Forms</title></info>
        

        <para>
            No one will be waxing poetic about the beauty of this form anytime soon. No matter -
            form appearance is fully customizable! See the <link linkend="zend.form.decorators">decorators section in the reference guide</link>
            for details.
        </para>

        <para>
            Additionally, you may be interested in <link linkend="learning.form.decorators.intro">our tutorial on form decorators</link>.
        </para>
    </note>

    <note><info><title>Checkpoint</title></info>
        

        <para>
            Now browse to "http://localhost/guestbook/sign". You should see the following in your
            browser:
        </para>

        <para>
            <inlinemediaobject><imageobject><imagedata width="421" scale="100" align="center" valign="middle" fileref="figures/learning.quickstart.create-form.png" format="PNG"/></imageobject></inlinemediaobject>
        </para>
    </note>
</section>
