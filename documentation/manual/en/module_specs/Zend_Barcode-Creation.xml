<?xml version="1.0" encoding="utf-8"?>


<section xmlns="http://docbook.org/ns/docbook" version="5.0" xml:id="zend.barcode.creation"><info><title>Barcode creation using Zend_Barcode class</title></info>
    

    <section xml:id="zend.barcode.creation.configuration"><info><title>Using Zend_Barcode::factory</title></info>
        

        <para>
            <classname>Zend_Barcode</classname> uses a factory method to create an instance of a
            renderer that extends <classname>Zend_Barcode_Renderer_RendererAbstract</classname>. The
            factory method accepts five arguments.
        </para>

        <orderedlist>
            <listitem>
                <para>The name of the barcode format (e.g., "code39") (required)</para>
            </listitem>

            <listitem>
                <para>The name of the renderer (e.g., "image") (required)</para>
            </listitem>

            <listitem>
                <para>
                    Options to pass to the barcode object (an array or
                    <classname>Zend_Config</classname> object) (optional)
                </para>
            </listitem>

            <listitem>
                <para>
                    Options to pass to the renderer object (an array or
                    <classname>Zend_Config</classname> object) (optional)
                </para>
            </listitem>

            <listitem>
                <para>
                    Boolean to indicate whether or not to automatically render errors. If an
                    exception occurs, the provided barcode object will be replaced with an Error
                    representation (optional default <constant>TRUE</constant>)
                </para>
            </listitem>
        </orderedlist>

        <example xml:id="zend.barcode.creation.configuration.example-1"><info><title>Getting a Renderer with Zend_Barcode::factory()</title></info>
            

            <para>
                <methodname>Zend_Barcode::factory()</methodname> instantiates barcode objects and
                renderers and ties them together. In this first example, we will use the
                <emphasis>Code39</emphasis> barcode type together with the
                <emphasis>Image</emphasis> renderer.
            </para>

            <programlisting language="php">
// Only the text to draw is required
$barcodeOptions = array('text' =&gt; 'ZEND-FRAMEWORK');

// No required options
$rendererOptions = array();
$renderer = Zend_Barcode::factory(
    'code39', 'image', $barcodeOptions, $rendererOptions
);
</programlisting>
        </example>

        <example xml:id="zend.barcode.creation.configuration.example-2"><info><title>Using Zend_Barcode::factory() with Zend_Config objects</title></info>
            

            <para>
                You may pass a <classname>Zend_Config</classname> object to the factory in order to
                create the necessary objects. The following example is functionally equivalent to
                the previous.
            </para>

            <programlisting language="php">
// Using only one Zend_Config object
$config = new Zend_Config(array(
    'barcode'        =&gt; 'code39',
    'barcodeParams'  =&gt; array('text' =&gt; 'ZEND-FRAMEWORK'),
    'renderer'       =&gt; 'image',
    'rendererParams' =&gt; array('imageType' =&gt; 'gif'),
));

$renderer = Zend_Barcode::factory($config);
</programlisting>
        </example>
    </section>

    <section xml:id="zend.barcode.creation.drawing"><info><title>Drawing a barcode</title></info>
        

        <para>
            When you <emphasis>draw</emphasis> the barcode, you retrieve the resource in which the
            barcode is drawn. To draw a barcode, you can call the <methodname>draw()</methodname> of
            the renderer, or simply use the proxy method provided by
            <classname>Zend_Barcode</classname>.
        </para>

        <example xml:id="zend.barcode.creation.drawing.example-1"><info><title>Drawing a barcode with the renderer object</title></info>
            

            <programlisting language="php">
// Only the text to draw is required
$barcodeOptions = array('text' =&gt; 'ZEND-FRAMEWORK');

// No required options
$rendererOptions = array();

// Draw the barcode in a new image,
$imageResource = Zend_Barcode::factory(
    'code39', 'image', $barcodeOptions, $rendererOptions
)-&gt;draw();
</programlisting>
        </example>

        <example xml:id="zend.barcode.creation.drawing.example-2"><info><title>Drawing a barcode with Zend_Barcode::draw()</title></info>
            

            <programlisting language="php">
// Only the text to draw is required
$barcodeOptions = array('text' =&gt; 'ZEND-FRAMEWORK');

// No required options
$rendererOptions = array();

// Draw the barcode in a new image,
$imageResource = Zend_Barcode::draw(
    'code39', 'image', $barcodeOptions, $rendererOptions
);
</programlisting>
        </example>
    </section>

    <section xml:id="zend.barcode.creation.renderering"><info><title>Renderering a barcode</title></info>
        

        <para>
            When you render a barcode, you draw the barcode, you send the headers and you send the
            resource (e.g. to a browser). To render a barcode, you can call the
            <methodname>render()</methodname> method of the renderer or simply use the proxy method
            provided by <classname>Zend_Barcode</classname>.
        </para>

        <example xml:id="zend.barcode.creation.renderering.example-1"><info><title>Renderering a barcode with the renderer object</title></info>
            

            <programlisting language="php">
// Only the text to draw is required
$barcodeOptions = array('text' =&gt; 'ZEND-FRAMEWORK');

// No required options
$rendererOptions = array();

// Draw the barcode in a new image,
// send the headers and the image
Zend_Barcode::factory(
    'code39', 'image', $barcodeOptions, $rendererOptions
)-&gt;render();
</programlisting>

            <para>
                This will generate this barcode:
            </para>

            <para>
                <inlinemediaobject><imageobject><imagedata width="275" align="center" valign="middle" fileref="figures/zend.barcode.introduction.example-1.png" format="PNG"/></imageobject></inlinemediaobject>
            </para>
        </example>

        <example xml:id="zend.barcode.creation.renderering.example-2"><info><title>Renderering a barcode with Zend_Barcode::render()</title></info>
            

            <programlisting language="php">
// Only the text to draw is required
$barcodeOptions = array('text' =&gt; 'ZEND-FRAMEWORK');

// No required options
$rendererOptions = array();

// Draw the barcode in a new image,
// send the headers and the image
Zend_Barcode::render(
    'code39', 'image', $barcodeOptions, $rendererOptions
);
</programlisting>

            <para>
                This will generate the same barcode as the previous example.
            </para>
        </example>
    </section>
</section>
