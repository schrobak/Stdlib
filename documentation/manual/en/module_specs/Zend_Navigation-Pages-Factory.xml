<?xml version="1.0" encoding="utf-8"?>
<!-- Converted by db4-upgrade version 1.0 -->

<section xmlns="http://docbook.org/ns/docbook" version="5.0" xml:id="zend.navigation.pages.factory"><info><title>Creating pages using the page factory</title></info>
    

    <para>
        All pages (also custom classes), can be created using the page
        factory, <methodname>Zend_Navigation_Page::factory()</methodname>. The factory
        can take an array with options, or a
        <classname>Zend_Config</classname> object. Each key in the
        array/config corresponds to a page option, as seen in the
        section on <link linkend="zend.navigation.pages">Pages</link>.
        If the option <code>uri</code> is given and no <acronym>MVC</acronym> options are
        given (<code>action, controller, module, route</code>), an <acronym>URI</acronym>
        page will be created. If any of the <acronym>MVC</acronym> options are given, an
        <acronym>MVC</acronym> page will be created.
    </para>

    <para>
        If <code>type</code> is given, the factory will assume the value to
        be the name of the class that should be created. If the value is
        <code>mvc</code> or <code>uri</code> and <acronym>MVC</acronym>/URI page will be created.
    </para>

    <example xml:id="zend.navigation.pages.factory.example.mvc"><info><title>Creating an MVC page using the page factory</title></info>
        

        <programlisting language="php">
$page = Zend_Navigation_Page::factory(array(
    'label'  =&gt; 'My MVC page',
    'action' =&gt; 'index'
));

$page = Zend_Navigation_Page::factory(array(
    'label'      =&gt; 'Search blog',
    'action'     =&gt; 'index',
    'controller' =&gt; 'search',
    'module'     =&gt; 'blog'
));

$page = Zend_Navigation_Page::factory(array(
    'label'      =&gt; 'Home',
    'action'     =&gt; 'index',
    'controller' =&gt; 'index',
    'module'     =&gt; 'index',
    'route'      =&gt; 'home'
));

$page = Zend_Navigation_Page::factory(array(
    'type'   =&gt; 'mvc',
    'label'  =&gt; 'My MVC page'
));
</programlisting>
    </example>

    <example xml:id="zend.navigation.pages.factory.example.uri"><info><title>Creating a URI page using the page factory</title></info>
        

        <programlisting language="php">
$page = Zend_Navigation_Page::factory(array(
    'label' =&gt; 'My URI page',
    'uri'   =&gt; 'http://www.example.com/'
));

$page = Zend_Navigation_Page::factory(array(
    'label'  =&gt; 'Search',
    'uri'    =&gt; 'http://www.example.com/search',
    'active' =&gt; true
));

$page = Zend_Navigation_Page::factory(array(
    'label' =&gt; 'My URI page',
    'uri'   =&gt; '#'
));

$page = Zend_Navigation_Page::factory(array(
    'type'   =&gt; 'uri',
    'label'  =&gt; 'My URI page'
));
</programlisting>
    </example>

    <example xml:id="zend.navigation.pages.factory.example.custom"><info><title>Creating a custom page type using the page factory</title></info>
        

        <para>
            To create a custom page type using the factory, use the option
            <code>type</code> to specify a class name to instantiate.
        </para>

        <programlisting language="php">
class My_Navigation_Page extends Zend_Navigation_Page
{
    protected $_fooBar = 'ok';

    public function setFooBar($fooBar)
    {
        $this-&gt;_fooBar = $fooBar;
    }
}

$page = Zend_Navigation_Page::factory(array(
    'type'    =&gt; 'My_Navigation_Page',
    'label'   =&gt; 'My custom page',
    'foo_bar' =&gt; 'foo bar'
));
</programlisting>
    </example>
</section>
