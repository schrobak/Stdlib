<?xml version="1.0" encoding="utf-8"?>
<!-- Converted by db4-upgrade version 1.0 -->

<section xmlns="http://docbook.org/ns/docbook" version="5.0" xml:id="zend.controller.router.routes.chain"><info><title>Zend_Controller_Router_Route_Chain</title></info>
    

    <para>
        <classname>Zend_Controller_Router_Route_Chain</classname> is a route which allows
        to chain multiple routes together. This allows you to chain
        hostname-routes and path routes, or multiple path routes for example.
        Chaining can be done either programatically or within a configuration
        file.
    </para>

    <note><info><title>Parameter Priority</title></info>
        

        <para>
            When chaining routes together, the parameters of the outer route
            have a higher priority than the parameters of the inner route. Thus
            if you define a controller in the outer and in the inner route,
            the controller of the outer route will be selected.
        </para>
    </note>

    <para>
        When chaining programatically, there are two ways to achieve this. The
        first one is to create a new
        <classname>Zend_Controller_Router_Route_Chain</classname> instance and then
        calling the <methodname>chain()</methodname> method multiple times with all routes
        which should be chained together. The other way is to take the first
        route, e.g. a hostname route, and calling the <methodname>chain()</methodname>
        method on it with the route which should be appended to it. This
        will not modify the hostname route, but return a new instance of
        <classname>Zend_Controller_Router_Route_Chain</classname>, which then has both
        routes chained together:
    </para>

    <programlisting language="php">
// Create two routes
$hostnameRoute = new Zend_Controller_Router_Route_Hostname(...);
$pathRoute     = new Zend_Controller_Router_Route(...);

// First way, chain them via the chain route
$chainedRoute = new Zend_Controller_Router_Route_Chain();
$chainedRoute-&gt;chain($hostnameRoute)
             -&gt;chain($pathRoute);

// Second way, chain them directly
$chainedRoute = $hostnameRoute-&gt;chain($pathRoute);
</programlisting>

    <para>
        When chaining routes together, their separator is a slash
        by default. There may be cases when you want to have a different
        separator:
    </para>

    <programlisting language="php">
// Create two routes
$firstRoute  = new Zend_Controller_Router_Route('foo');
$secondRoute = new Zend_Controller_Router_Route('bar');

// Chain them together with a different separator
$chainedRoute = $firstRoute-&gt;chain($secondRoute, '-');

// Assemble the route: "foo-bar"
echo $chainedRoute-&gt;assemble();
</programlisting>

    <section xml:id="zend.controller.router.routes.chain.config"><info><title>Chain Routes via Zend_Config</title></info>
        

        <para>
            To chain routes together in a config file, there are additional
            parameters for the configuration of those. The simpler approach is
            to use the <property>chains</property> parameters. This one is simply a list
            of routes, which will be chained with the parent route. Neither the
            parent- nor the child-route will be added directly to the router but
            only the resulting chained route. The name of the chained route in
            the router will be the parent route name and the child route name
            concatenated with a dash (-) by default. A simple config in <acronym>XML</acronym>
            would look like this:
        </para>

        <programlisting language="xml">
&lt;routes&gt;
    &lt;www type="Zend_Controller_Router_Route_Hostname"&gt;
        &lt;route&gt;www.example.com&lt;/route&gt;
        &lt;chains&gt;
            &lt;language type="Zend_Controller_Router_Route"&gt;
                &lt;route&gt;:language&lt;/route&gt;
                &lt;reqs language="[a-z]{2}"&gt;
                &lt;chains&gt;
                    &lt;index type="Zend_Controller_Router_Route_Static"&gt;
                        &lt;route&gt;&lt;/route&gt;
                        &lt;defaults module="default" controller="index"
                                  action="index" /&gt;
                    &lt;/index&gt;
                    &lt;imprint type="Zend_Controller_Router_Route_Static"&gt;
                        &lt;route&gt;imprint&lt;/route&gt;
                        &lt;defaults module="default" controller="index"
                                  action="index" /&gt;
                    &lt;/imprint&gt;
                &lt;/chains&gt;
            &lt;/language&gt;
        &lt;/chains&gt;
    &lt;/www&gt;
    &lt;users type="Zend_Controller_Router_Route_Hostname"&gt;
        &lt;route&gt;users.example.com&lt;/route&gt;
        &lt;chains&gt;
            &lt;profile type="Zend_Controller_Router_Route"&gt;
                &lt;route&gt;:username&lt;/route&gt;
                &lt;defaults module="users" controller="profile" action="index" /&gt;
            &lt;/profile&gt;
        &lt;/chains&gt;
    &lt;/users&gt;
    &lt;misc type="Zend_Controller_Router_Route_Static"&gt;
        &lt;route&gt;misc&lt;/route&gt;
    &lt;/misc&gt;
&lt;/routes&gt;
</programlisting>

        <para>
            This will result in the three routes <command>www-language-index</command>,
            <command>www-language-imprint</command> and
            <command>users-language-profile</command> which will only match based on
            the hostname and the route <command>misc</command>, which will match with
            any hostname.
        </para>

        <para>
            The alternative way of creating a chained route is via the
            <property>chain</property> parameter, which can only be used with the
            chain-route type directly, and also just works in the root level:
        </para>

        <programlisting language="xml">
&lt;routes&gt;
    &lt;www type="Zend_Controller_Router_Route_Chain"&gt;
        &lt;route&gt;www.example.com&lt;/route&gt;
    &lt;/www&gt;
    &lt;language type="Zend_Controller_Router_Route"&gt;
        &lt;route&gt;:language&lt;/route&gt;
        &lt;reqs language="[a-z]{2}"&gt;
    &lt;/language&gt;
    &lt;index type="Zend_Controller_Router_Route_Static"&gt;
        &lt;route&gt;&lt;/route&gt;
        &lt;defaults module="default" controller="index" action="index" /&gt;
    &lt;/index&gt;
    &lt;imprint type="Zend_Controller_Router_Route_Static"&gt;
        &lt;route&gt;imprint&lt;/route&gt;
        &lt;defaults module="default" controller="index" action="index" /&gt;
    &lt;/imprint&gt;

    &lt;www-index type="Zend_Controller_Router_Route_Chain"&gt;
        &lt;chain&gt;www, language, index&lt;/chain&gt;
    &lt;/www-index&gt;
    &lt;www-imprint type="Zend_Controller_Router_Route_Chain"&gt;
        &lt;chain&gt;www, language, imprint&lt;/chain&gt;
    &lt;/www-imprint&gt;
&lt;/routes&gt;
</programlisting>

        <para>
            You can also give the <property>chain</property> parameter as array instead
            of separating the routes with a comma:
        </para>

        <programlisting language="xml">
&lt;routes&gt;
    &lt;www-index type="Zend_Controller_Router_Route_Chain"&gt;
        &lt;chain&gt;www&lt;/chain&gt;
        &lt;chain&gt;language&lt;/chain&gt;
        &lt;chain&gt;index&lt;/chain&gt;
    &lt;/www-index&gt;
    &lt;www-imprint type="Zend_Controller_Router_Route_Chain"&gt;
        &lt;chain&gt;www&lt;/chain&gt;
        &lt;chain&gt;language&lt;/chain&gt;
        &lt;chain&gt;imprint&lt;/chain&gt;
    &lt;/www-imprint&gt;
&lt;/routes&gt;
</programlisting>

        <para>
            When you configure chain routes with <classname>Zend_Config</classname> and
            want the chain name separator to be different from a dash, you
            need to specify this separator separately:
        </para>

        <programlisting language="php">
$config = new Zend_Config(array(
    'chainName' =&gt; array(
        'type'   =&gt; 'Zend_Controller_Router_Route_Static',
        'route'  =&gt; 'foo',
        'chains' =&gt; array(
            'subRouteName' =&gt; array(
                'type'     =&gt; 'Zend_Controller_Router_Route_Static',
                'route'    =&gt; 'bar',
                'defaults' =&gt; array(
                    'module'      =&gt; 'module',
                     'controller' =&gt; 'controller',
                     'action'     =&gt; 'action'
                )
            )
        )
    )
));

// Set separator before adding config
$router-&gt;setChainNameSeparator('_separator_')

// Add config
$router-&gt;addConfig($config);

// The name of our route now is: chainName_separator_subRouteName
echo $this-&gt;_router-&gt;assemble(array(), 'chainName_separator_subRouteName');

// The proof: it echoes /foo/bar
</programlisting>
    </section>
</section>
